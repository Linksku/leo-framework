diff --git a/node_modules/react-hook-form/dist/index.esm.mjs b/node_modules/react-hook-form/dist/index.esm.mjs
index 2de86ab..814900c 100644
--- a/node_modules/react-hook-form/dist/index.esm.mjs
+++ b/node_modules/react-hook-form/dist/index.esm.mjs
@@ -1541,7 +1541,7 @@ function schemaErrorLookup(errors, _fields, name) {
     };
 }

-var skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {
+var skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode, hasValue) => {
     if (mode.isOnAll) {
         return false;
     }
@@ -1549,7 +1549,9 @@ var skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode)
         return !(isTouched || isBlurEvent);
     }
     else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {
-        return !isBlurEvent;
+        return !isBlurEvent
+            // Fixes autofocus -> blur triggering validation
+            || (!hasValue && !isSubmitted);
     }
     else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {
         return isBlurEvent;
@@ -1980,7 +1982,14 @@ function createFormControl(props = {}) {
                 !_options.resolver &&
                 !get(_formState.errors, name) &&
                 !field._f.deps) ||
-                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);
+                skipValidation(
+                    isBlurEvent,
+                    get(_formState.touchedFields, name),
+                    _formState.isSubmitted,
+                    validationModeAfterSubmit,
+                    validationModeBeforeSubmit,
+                    !!fieldValue,
+                );
             const watched = isWatched(name, _names, isBlurEvent);
             set(_formValues, name, fieldValue);
             if (isBlurEvent) {
