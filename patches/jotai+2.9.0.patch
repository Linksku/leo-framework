diff --git a/node_modules/jotai/react/useAtom.d.ts b/node_modules/jotai/react/useAtom.d.ts
index 6b84b61..b91fe14 100644
--- a/node_modules/jotai/react/useAtom.d.ts
+++ b/node_modules/jotai/react/useAtom.d.ts
@@ -1,13 +1,13 @@
 import type { Atom, ExtractAtomArgs, ExtractAtomResult, ExtractAtomValue, PrimitiveAtom, SetStateAction, WritableAtom } from 'jotai/vanilla';
 import { useAtomValue } from './useAtomValue';
-type SetAtom<Args extends unknown[], Result> = (...args: Args) => Result;
+type SetAtom<Args extends unknown[], Result> = Stable<(...args: Args) => Result>;
 type Options = Parameters<typeof useAtomValue>[1];
-export declare function useAtom<Value, Args extends unknown[], Result>(atom: WritableAtom<Value, Args, Result>, options?: Options): [Awaited<Value>, SetAtom<Args, Result>];
-export declare function useAtom<Value>(atom: PrimitiveAtom<Value>, options?: Options): [Awaited<Value>, SetAtom<[SetStateAction<Value>], void>];
-export declare function useAtom<Value>(atom: Atom<Value>, options?: Options): [Awaited<Value>, never];
+export declare function useAtom<Value, Args extends unknown[], Result>(atom: WritableAtom<Value, Args, Result>, options?: Options): [Stable<Awaited<Value>>, SetAtom<Args, Result>];
+export declare function useAtom<Value>(atom: PrimitiveAtom<Value>, options?: Options): [Stable<Awaited<Value>>, SetAtom<[SetStateAction<Value>], void>];
+export declare function useAtom<Value>(atom: Atom<Value>, options?: Options): [Stable<Awaited<Value>>, never];
 export declare function useAtom<AtomType extends WritableAtom<unknown, never[], unknown>>(atom: AtomType, options?: Options): [
-    Awaited<ExtractAtomValue<AtomType>>,
+    Stable<Awaited<ExtractAtomValue<AtomType>>>,
     SetAtom<ExtractAtomArgs<AtomType>, ExtractAtomResult<AtomType>>
 ];
-export declare function useAtom<AtomType extends Atom<unknown>>(atom: AtomType, options?: Options): [Awaited<ExtractAtomValue<AtomType>>, never];
+export declare function useAtom<AtomType extends Atom<unknown>>(atom: AtomType, options?: Options): [Stable<Awaited<ExtractAtomValue<AtomType>>>, never];
 export {};
diff --git a/node_modules/jotai/react/useAtomValue.d.ts b/node_modules/jotai/react/useAtomValue.d.ts
index 6ce990a..452d3b9 100644
--- a/node_modules/jotai/react/useAtomValue.d.ts
+++ b/node_modules/jotai/react/useAtomValue.d.ts
@@ -3,6 +3,6 @@ import { useStore } from './Provider';
 type Options = Parameters<typeof useStore>[0] & {
     delay?: number;
 };
-export declare function useAtomValue<Value>(atom: Atom<Value>, options?: Options): Awaited<Value>;
-export declare function useAtomValue<AtomType extends Atom<unknown>>(atom: AtomType, options?: Options): Awaited<ExtractAtomValue<AtomType>>;
+export declare function useAtomValue<Value>(atom: Atom<Value>, options?: Options): Stable<Awaited<Value>>;
+export declare function useAtomValue<AtomType extends Atom<unknown>>(atom: AtomType, options?: Options): Stable<Awaited<ExtractAtomValue<AtomType>>>;
 export {};
diff --git a/node_modules/jotai/react/useSetAtom.d.ts b/node_modules/jotai/react/useSetAtom.d.ts
index 6d3b716..899fcd9 100644
--- a/node_modules/jotai/react/useSetAtom.d.ts
+++ b/node_modules/jotai/react/useSetAtom.d.ts
@@ -1,6 +1,6 @@
 import type { ExtractAtomArgs, ExtractAtomResult, WritableAtom } from 'jotai/vanilla';
 import { useStore } from './Provider';
-type SetAtom<Args extends unknown[], Result> = (...args: Args) => Result;
+type SetAtom<Args extends unknown[], Result> = Stable<(...args: Args) => Result>;
 type Options = Parameters<typeof useStore>[0];
 export declare function useSetAtom<Value, Args extends unknown[], Result>(atom: WritableAtom<Value, Args, Result>, options?: Options): SetAtom<Args, Result>;
 export declare function useSetAtom<AtomType extends WritableAtom<unknown, never[], unknown>>(atom: AtomType, options?: Options): SetAtom<ExtractAtomArgs<AtomType>, ExtractAtomResult<AtomType>>;
