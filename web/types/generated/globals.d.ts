import type { unstable_batchedUpdates as _batchedUpdates } from 'react-dom';
import type { default as _constate } from 'constate';
import type _cn from 'classnames';
import type _dayjs from 'dayjs';
import type _React from 'react';
import type { createElement as _ReactCreateElement } from 'react';
import type { Fragment as _ReactFragment } from 'react';
import type { useCallback as _useCallback } from 'react';
import type { useContext as _useContext } from 'react';
import type { useDebugValue as _useDebugValue } from 'react';
import type { useEffect as _useEffect } from 'react';
import type { useFormState as _useFormState } from 'react-hook-form';
import type { useImperativeHandle as _useImperativeHandle } from 'react';
import type { useLayoutEffect as _useLayoutEffect } from 'react';
import type { useMemo as _useMemo } from 'react';
import type { useReducer as _useReducer } from 'react';
import type { useRef as _useRef } from 'react';
import type { useState as _useState } from 'react';
import type { default as _Button } from '../../../web/components/ui/Button';
import type { default as _Card } from '../../../web/components/ui/Card';
import type { default as _Checkbox } from '../../../web/components/ui/Checkbox';
import type { default as _Dropdown } from '../../../web/components/ui/Dropdown';
import type { default as _FileInput } from '../../../web/components/ui/FileInput';
import type { default as _Input } from '../../../web/components/ui/Input';
import type { default as _Link } from '../../../web/components/ui/Link';
import type { default as _Radio } from '../../../web/components/ui/Radio';
import type { default as _Select } from '../../../web/components/ui/Select';
import type { default as _Spinner } from '../../../web/components/ui/Spinner';
import type { default as _Switch } from '../../../web/components/ui/Switch';
import type { default as _Table } from '../../../web/components/ui/Table';
import type { default as _Textarea } from '../../../web/components/ui/Textarea';
import type { default as _Typeahead } from '../../../web/components/ui/Typeahead';
import type { default as _UncontrolledCheckbox } from '../../../web/components/ui/UncontrolledCheckbox';
import type { default as _EMPTY_ARR } from '../../../web/lib/emptyArr';
import type { default as _EMPTY_OBJ } from '../../../web/lib/emptyObj';
import type { default as _ErrorLogger } from '../../../web/lib/ErrorLogger';
import type { default as _markMemoed } from '../../../web/lib/markMemoed';
import type { default as _NOOP } from '../../../web/lib/noop';
import type { default as _pause } from '../../../shared/lib/pause';
import type { default as _TS } from '../../../shared/lib/tsHelpers';
import type { default as _useApi } from '../../../web/lib/hooks/useApi/useApi';
import type { default as _useConst } from '../../../web/lib/hooks/useConst';
import type { default as _useDeferredApi } from '../../../web/lib/hooks/useApi/useDeferredApi';
import type { default as _useDeepMemoObj } from '../../../web/lib/hooks/useDeepMemoObj';
import type { default as _useDynamicCallback } from '../../../web/lib/hooks/useDynamicCallback';
import type { default as _useForm } from '../../../web/lib/hooks/useForm';
import type { default as _useLatest } from '../../../web/lib/hooks/useLatest';
import type { default as _useLog } from '../../../web/lib/hooks/useLog';
import type { default as _useLogChanged } from '../../../web/lib/hooks/useLogChanged';
import type { default as _useLogLifecycle } from '../../../web/lib/hooks/useLogLifecycle';
import type { default as _useMutateApiCache } from '../../../web/lib/hooks/useApi/useMutateApiCache';
import type { default as _useSse } from '../../../web/lib/hooks/useSse';
import type { useAlertsStore as _useAlertsStore } from '../../../web/stores/AlertsStore';
import type { useAuthStore as _useAuthStore } from '../../../web/stores/AuthStore';
import type { useEntitiesStore as _useEntitiesStore } from '../../../web/stores/EntitiesStore';
import type { useHistoryStore as _useHistoryStore } from '../../../web/stores/HistoryStore';
import type { useHomeNavStore as _useHomeNavStore } from '../../../web/stores/HomeNavStore';
import type { useRouteStore as _useRouteStore } from '../../../web/stores/RouteStore';
import type { useSlideUpStore as _useSlideUpStore } from '../../../web/stores/SlideUpStore';
import type { useSseStore as _useSseStore } from '../../../web/stores/SseStore';
import type { useStacksNavStore as _useStacksNavStore } from '../../../web/stores/StacksNavStore';
import type { useToastsStore as _useToastsStore } from '../../../web/stores/ToastsStore';
import type { useUIFrameStore as _useUIFrameStore } from '../../../web/stores/UIFrameStore';
import type { useCreateEntities as _useCreateEntities } from '../../../web/stores/EntitiesStore';
import type { useCurrentUserId as _useCurrentUserId } from '../../../web/stores/AuthStore';
import type { useDeleteEntities as _useDeleteEntities } from '../../../web/stores/EntitiesStore';
import type { useEntities as _useEntities } from '../../../web/stores/EntitiesStore';
import type { useEntity as _useEntity } from '../../../web/stores/EntitiesStore';
import type { useGlobalMemo as _useGlobalMemo } from '../../../web/stores/GlobalMemoStore';
import type { useGlobalState as _useGlobalState } from '../../../web/stores/GlobalStateStore';
import type { useHideSlideUp as _useHideSlideUp } from '../../../web/stores/SlideUpStore';
import type { useLoadEntities as _useLoadEntities } from '../../../web/stores/EntitiesStore';
import type { useAuthState as _useAuthState } from '../../../web/stores/AuthStore';
import type { useReplacePath as _useReplacePath } from '../../../web/stores/HistoryStore';
import type { useRequiredEntity as _useRequiredEntity } from '../../../web/stores/EntitiesStore';
import type { usePushPath as _usePushPath } from '../../../web/stores/HistoryStore';
import type { useReloadPage as _useReloadPage } from '../../../web/stores/UIFrameStore';
import type { useShowAlert as _useShowAlert } from '../../../web/stores/AlertsStore';
import type { useShowConfirm as _useShowConfirm } from '../../../web/stores/AlertsStore';
import type { useShowSlideUp as _useShowSlideUp } from '../../../web/stores/SlideUpStore';
import type { useShowToast as _useShowToast } from '../../../web/stores/ToastsStore';
import type { useUpdateEntities as _useUpdateEntities } from '../../../web/stores/EntitiesStore';

declare global {
  const batchedUpdates: typeof _batchedUpdates;
  const constate: typeof _constate;
  const cn: typeof _cn;
  const dayjs: typeof _dayjs;
  const React: typeof _React;
  const ReactCreateElement: typeof _ReactCreateElement;
  const ReactFragment: typeof _ReactFragment;
  const useCallback: typeof _useCallback;
  const useContext: typeof _useContext;
  const useDebugValue: typeof _useDebugValue;
  const useEffect: typeof _useEffect;
  const useFormState: typeof _useFormState;
  const useImperativeHandle: typeof _useImperativeHandle;
  const useLayoutEffect: typeof _useLayoutEffect;
  const useMemo: typeof _useMemo;
  const useReducer: typeof _useReducer;
  const useRef: typeof _useRef;
  const useState: typeof _useState;
  const Button: typeof _Button;
  const Card: typeof _Card;
  const Checkbox: typeof _Checkbox;
  const Dropdown: typeof _Dropdown;
  const FileInput: typeof _FileInput;
  const Input: typeof _Input;
  const Link: typeof _Link;
  const Radio: typeof _Radio;
  const Select: typeof _Select;
  const Spinner: typeof _Spinner;
  const Switch: typeof _Switch;
  const Table: typeof _Table;
  const Textarea: typeof _Textarea;
  const Typeahead: typeof _Typeahead;
  const UncontrolledCheckbox: typeof _UncontrolledCheckbox;
  const EMPTY_ARR: typeof _EMPTY_ARR;
  const EMPTY_OBJ: typeof _EMPTY_OBJ;
  const ErrorLogger: typeof _ErrorLogger;
  const markMemoed: typeof _markMemoed;
  const NOOP: typeof _NOOP;
  const pause: typeof _pause;
  const TS: typeof _TS;
  const useApi: typeof _useApi;
  const useConst: typeof _useConst;
  const useDeferredApi: typeof _useDeferredApi;
  const useDeepMemoObj: typeof _useDeepMemoObj;
  const useDynamicCallback: typeof _useDynamicCallback;
  const useForm: typeof _useForm;
  const useLatest: typeof _useLatest;
  const useLog: typeof _useLog;
  const useLogChanged: typeof _useLogChanged;
  const useLogLifecycle: typeof _useLogLifecycle;
  const useMutateApiCache: typeof _useMutateApiCache;
  const useSse: typeof _useSse;
  const useAlertsStore: typeof _useAlertsStore;
  const useAuthStore: typeof _useAuthStore;
  const useEntitiesStore: typeof _useEntitiesStore;
  const useHistoryStore: typeof _useHistoryStore;
  const useHomeNavStore: typeof _useHomeNavStore;
  const useRouteStore: typeof _useRouteStore;
  const useSlideUpStore: typeof _useSlideUpStore;
  const useSseStore: typeof _useSseStore;
  const useStacksNavStore: typeof _useStacksNavStore;
  const useToastsStore: typeof _useToastsStore;
  const useUIFrameStore: typeof _useUIFrameStore;
  const useCreateEntities: typeof _useCreateEntities;
  const useCurrentUserId: typeof _useCurrentUserId;
  const useDeleteEntities: typeof _useDeleteEntities;
  const useEntities: typeof _useEntities;
  const useEntity: typeof _useEntity;
  const useGlobalMemo: typeof _useGlobalMemo;
  const useGlobalState: typeof _useGlobalState;
  const useHideSlideUp: typeof _useHideSlideUp;
  const useLoadEntities: typeof _useLoadEntities;
  const useAuthState: typeof _useAuthState;
  const useReplacePath: typeof _useReplacePath;
  const useRequiredEntity: typeof _useRequiredEntity;
  const usePushPath: typeof _usePushPath;
  const useReloadPage: typeof _useReloadPage;
  const useShowAlert: typeof _useShowAlert;
  const useShowConfirm: typeof _useShowConfirm;
  const useShowSlideUp: typeof _useShowSlideUp;
  const useShowToast: typeof _useShowToast;
  const useUpdateEntities: typeof _useUpdateEntities;
}
