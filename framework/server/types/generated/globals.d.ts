import type { default as _dayjs } from 'dayjs';
import type { default as _fetch } from 'node-fetch';
import type { default as _EMPTY_ARR } from '../../lib/emptyArr';
import type { default as _EMPTY_OBJ } from '../../lib/emptyObj';
import type { default as _ErrorLogger } from '../../lib/errorLogger/ErrorLogger';
import type { default as _getModelClass } from '../../lib/Model/getModelClass';
import type { default as _getRC } from '../../lib/getRequestContext';
import type { default as _HandledError } from '../../lib/HandledError';
import type { default as _NOOP } from '../../lib/noop';
import type { default as _printDebug } from '../../lib/printDebug';
import type { raw as _raw } from '../../services/knex/knexMaterialize';
import type { default as _SchemaConstants } from '../../consts/schema';
import type { default as _wrapPromise } from '../../lib/wrapPromise';
import type { default as _Notif } from '../../models/Notif/Notif';
import type { default as _NotifBT } from '../../models/Notif/NotifBT';
import type { default as _Report } from '../../models/Report/Report';
import type { default as _ReportBT } from '../../models/Report/ReportBT';
import type { default as _User } from '../../models/User/User';
import type { default as _UserBT } from '../../models/User/UserBT';
import type { default as _UserMeta } from '../../models/UserMeta/UserMeta';
import type { default as _UserMetaBT } from '../../models/UserMeta/UserMetaBT';

declare global {
  const dayjs: typeof _dayjs;
  const fetch: typeof _fetch;
  const EMPTY_ARR: typeof _EMPTY_ARR;
  const EMPTY_OBJ: typeof _EMPTY_OBJ;
  const ErrorLogger: typeof _ErrorLogger;
  const getModelClass: typeof _getModelClass;
  const getRC: typeof _getRC;
  const HandledError: typeof _HandledError;
  const NOOP: typeof _NOOP;
  const printDebug: typeof _printDebug;
  const raw: typeof _raw;
  const SchemaConstants: typeof _SchemaConstants;
  const wrapPromise: typeof _wrapPromise;
  const Notif: typeof _Notif;
  const NotifBT: typeof _NotifBT;
  const Report: typeof _Report;
  const ReportBT: typeof _ReportBT;
  const User: typeof _User;
  const UserBT: typeof _UserBT;
  const UserMeta: typeof _UserMeta;
  const UserMetaBT: typeof _UserMetaBT;
}
