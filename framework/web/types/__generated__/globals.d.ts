import type { atom as _atom } from 'jotai';
import type { default as _cx } from 'clsx';
import type _React from 'react';
import type { createElement as _ReactCreateElement } from 'react';
import type { useAtom as _useAtom } from 'jotai';
import type { useAtomValue as _useAtomValue } from 'jotai';
import type { useCallback as _useCallback } from 'react';
import type { useContext as _useContext } from 'react';
import type { useDeferredValue as _useDeferredValue } from 'react';
import type { useDebugValue as _useDebugValue } from 'react';
import type { useEffect as _useEffect } from 'react';
import type { useFormState as _useFormState } from 'react-hook-form';
import type { useId as _useId } from 'react';
import type { useImperativeHandle as _useImperativeHandle } from 'react';
import type { useLayoutEffect as _useLayoutEffect } from 'react';
import type { useMemo as _useMemo } from 'react';
import type { useReducer as _useReducer } from 'react';
import type { useRef as _useRef } from 'react';
import type { useSetAtom as _useSetAtom } from 'jotai';
import type { useState as _useState } from 'react';
import type { useTransition as _useTransition } from 'react';
import type { default as _Button } from '../../components/common/Button';
import type { default as _Img } from '../../components/common/Img';
import type { default as _Input } from '../../components/common/Input';
import type { default as _Link } from '../../components/common/Link';
import type { default as _Spinner } from '../../components/common/Spinner';
import type { default as _TruncatedText } from '../../components/common/TruncatedText';
import type { HOME_TABS as _HOME_TABS } from '../../../../app/shared/config/homeTabs';
import type { default as _constate } from '../../utils/constate';
import type { default as _EMPTY_ARR } from '../../utils/emptyArr';
import type { default as _EMPTY_MAP } from '../../utils/emptyMap';
import type { default as _EMPTY_OBJ } from '../../utils/emptyObj';
import type { default as _EMPTY_SET } from '../../utils/emptySet';
import type { default as _ErrorLogger } from '../../services/ErrorLogger';
import type { default as _EventLogger } from '../../services/EventLogger';
import type { hideSlideUp as _hideSlideUp } from '../../stores/SlideUpStore';
import type { default as _markStable } from '../../utils/markStable';
import type { default as _NOOP } from '../../utils/noop';
import type { default as _reactLazy } from '../../utils/reactLazy';
import type { showAlert as _showAlert } from '../../stores/AlertStore';
import type { showConfirm as _showConfirm } from '../../stores/AlertStore';
import type { showSlideUp as _showSlideUp } from '../../stores/SlideUpStore';
import type { showToast as _showToast } from '../../stores/ToastsStore';
import type { default as _TestIds } from '../../../shared/consts/testIds';
import type { default as _useAllEntities } from '../../stores/entities/useAllEntities';
import type { default as _useApi } from '../../stores/api/useApi';
import type { default as _useCatchAsync } from '../../utils/useCatchAsync';
import type { default as _useConst } from '../../utils/useConst';
import type { default as _useDeferredApi } from '../../stores/api/useDeferredApi';
import type { default as _useDeepMemoObj } from '../../utils/useDeepMemoObj';
import type { default as _useLatestCallback } from '../../utils/useLatestCallback';
import type { default as _useEntity } from '../../stores/entities/useEntity';
import type { default as _useEntitiesArr } from '../../stores/entities/useEntitiesArr';
import type { default as _useForm } from '../../utils/useForm';
import type { default as _useGlobalMemo } from '../../services/useGlobalMemo';
import type { default as _useLatest } from '../../utils/useLatest';
import type { default as _useLog } from '../../utils/useLog';
import type { default as _useLogChanged } from '../../utils/useLogChanged';
import type { default as _useLogLifecycle } from '../../utils/useLogLifecycle';
import type { default as _usePushHome } from '../../stores/history/usePushHome';
import type { default as _usePushPath } from '../../stores/history/usePushPath';
import type { default as _useRelation } from '../../stores/entities/useRelation';
import type { default as _useReplacePath } from '../../stores/history/useReplacePath';
import type { default as _useRequiredRelation } from '../../stores/entities/useRequiredRelation';
import type { default as _useRequiredEntity } from '../../stores/entities/useRequiredEntity';
import type { default as _useSse } from '../../stores/sse/useSse';
import type { default as _useSseArr } from '../../stores/sse/useSseArr';
import type { default as _useStateStable } from '../../utils/useStateStable';
import type { default as _wrapPromise } from '../../utils/wrapPromise';
import type { useApiStore as _useApiStore } from '../../stores/api/ApiStore';
import type { useAuthStore as _useAuthStore } from '../../stores/AuthStore';
import type { useEntitiesStore as _useEntitiesStore } from '../../stores/entities/EntitiesStore';
import type { useEntitiesIndexStore as _useEntitiesIndexStore } from '../../stores/entities/EntitiesIndexStore';
import type { useHistoryStore as _useHistoryStore } from '../../stores/history/HistoryStore';
import type { useLightboxStore as _useLightboxStore } from '../../stores/LightboxStore';
import type { useRelationsStore as _useRelationsStore } from '../../stores/RelationsStore';
import type { useRouteStore as _useRouteStore } from '../../stores/RouteStore';
import type { useSseStore as _useSseStore } from '../../stores/sse/SseStore';
import type { useUIFrameStore as _useUIFrameStore } from '../../stores/UIFrameStore';
import type { useAuthState as _useAuthState } from '../../stores/AuthStore';
import type { useCurrentUserId as _useCurrentUserId } from '../../stores/AuthStore';
import type { useHomeTab as _useHomeTab } from '../../stores/history/HistoryStore';
import type { useMutateApiCache as _useMutateApiCache } from '../../stores/api/ApiStore';
import type { useMutateEntity as _useMutateEntity } from '../../stores/entities/EntitiesStore';
import type { useNavState as _useNavState } from '../../stores/history/HistoryStore';
import type { useReloadPage as _useReloadPage } from '../../stores/UIFrameStore';
import type { useRouteMatches as _useRouteMatches } from '../../stores/RouteStore';
import type { useRouteQuery as _useRouteQuery } from '../../stores/RouteStore';

declare global {
  const atom: typeof _atom;
  const cx: typeof _cx;
  const React: typeof _React;
  const ReactCreateElement: typeof _ReactCreateElement;
  const useAtom: typeof _useAtom;
  const useAtomValue: typeof _useAtomValue;
  const useCallback: typeof _useCallback;
  const useContext: typeof _useContext;
  const useDeferredValue: typeof _useDeferredValue;
  const useDebugValue: typeof _useDebugValue;
  const useEffect: typeof _useEffect;
  const useFormState: typeof _useFormState;
  const useId: typeof _useId;
  const useImperativeHandle: typeof _useImperativeHandle;
  const useLayoutEffect: typeof _useLayoutEffect;
  const useMemo: typeof _useMemo;
  const useReducer: typeof _useReducer;
  const useRef: typeof _useRef;
  const useSetAtom: typeof _useSetAtom;
  const useState: typeof _useState;
  const useTransition: typeof _useTransition;
  const Button: typeof _Button;
  const Img: typeof _Img;
  const Input: typeof _Input;
  const Link: typeof _Link;
  const Spinner: typeof _Spinner;
  const TruncatedText: typeof _TruncatedText;
  const HOME_TABS: typeof _HOME_TABS;
  const constate: typeof _constate;
  const EMPTY_ARR: typeof _EMPTY_ARR;
  const EMPTY_MAP: typeof _EMPTY_MAP;
  const EMPTY_OBJ: typeof _EMPTY_OBJ;
  const EMPTY_SET: typeof _EMPTY_SET;
  const ErrorLogger: typeof _ErrorLogger;
  const EventLogger: typeof _EventLogger;
  const hideSlideUp: typeof _hideSlideUp;
  const markStable: typeof _markStable;
  const NOOP: typeof _NOOP;
  const reactLazy: typeof _reactLazy;
  const showAlert: typeof _showAlert;
  const showConfirm: typeof _showConfirm;
  const showSlideUp: typeof _showSlideUp;
  const showToast: typeof _showToast;
  const TestIds: typeof _TestIds;
  const useAllEntities: typeof _useAllEntities;
  const useApi: typeof _useApi;
  const useCatchAsync: typeof _useCatchAsync;
  const useConst: typeof _useConst;
  const useDeferredApi: typeof _useDeferredApi;
  const useDeepMemoObj: typeof _useDeepMemoObj;
  const useLatestCallback: typeof _useLatestCallback;
  const useEntity: typeof _useEntity;
  const useEntitiesArr: typeof _useEntitiesArr;
  const useForm: typeof _useForm;
  const useGlobalMemo: typeof _useGlobalMemo;
  const useLatest: typeof _useLatest;
  const useLog: typeof _useLog;
  const useLogChanged: typeof _useLogChanged;
  const useLogLifecycle: typeof _useLogLifecycle;
  const usePushHome: typeof _usePushHome;
  const usePushPath: typeof _usePushPath;
  const useRelation: typeof _useRelation;
  const useReplacePath: typeof _useReplacePath;
  const useRequiredRelation: typeof _useRequiredRelation;
  const useRequiredEntity: typeof _useRequiredEntity;
  const useSse: typeof _useSse;
  const useSseArr: typeof _useSseArr;
  const useStateStable: typeof _useStateStable;
  const wrapPromise: typeof _wrapPromise;
  const useApiStore: typeof _useApiStore;
  const useAuthStore: typeof _useAuthStore;
  const useEntitiesStore: typeof _useEntitiesStore;
  const useEntitiesIndexStore: typeof _useEntitiesIndexStore;
  const useHistoryStore: typeof _useHistoryStore;
  const useLightboxStore: typeof _useLightboxStore;
  const useRelationsStore: typeof _useRelationsStore;
  const useRouteStore: typeof _useRouteStore;
  const useSseStore: typeof _useSseStore;
  const useUIFrameStore: typeof _useUIFrameStore;
  const useAuthState: typeof _useAuthState;
  const useCurrentUserId: typeof _useCurrentUserId;
  const useHomeTab: typeof _useHomeTab;
  const useMutateApiCache: typeof _useMutateApiCache;
  const useMutateEntity: typeof _useMutateEntity;
  const useNavState: typeof _useNavState;
  const useReloadPage: typeof _useReloadPage;
  const useRouteMatches: typeof _useRouteMatches;
  const useRouteQuery: typeof _useRouteQuery;
}
