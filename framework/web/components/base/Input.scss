.inputGroup {
  display: flex;
  overflow: hidden;
  margin-bottom: 1.5rem;
}

.labelWrap {
  padding-top: 2.5rem;
  position: relative;
}

.label {
  @extend %label;

  display: inline-block;
  position: absolute;
  top: 0;
}

.input,
.prefix,
.suffix {
  height: $inputHeight;
  vertical-align: middle;
  padding: $inputPadding;
  color: $inputColor;
  background-color: #fff;
  border: $inputBorder;
}

.input {
  display: block;
  max-width: 100%;
  width: 100%;
  order: 2;
  flex-grow: 1;
  color: $inputColor;
  border: $inputBorder;
  overflow: visible;
  margin: 0;
  border-radius: $inputBorderRadius;
  outline: none;
  transition: border-color 0.2s;
  // stylelint-disable-next-line plugin/no-unsupported-browser-features
  appearance: none;

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    // stylelint-disable-next-line plugin/no-unsupported-browser-features, property-no-vendor-prefix
    -webkit-appearance: none;
    margin: 0;
  }

  &:focus {
    border-color: color.mix($primaryColor, $inputBorderColor, $weight: 33%);
  }

  &[type=number] {
    // stylelint-disable-next-line plugin/no-unsupported-browser-features, property-no-vendor-prefix
    -moz-appearance: textfield;
  }

  @include placeholder {
    font-weight: 300;
    color: $inputPlaceholderColor;
  }

  &.hasPrefix {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-left: 0;
  }

  &.hasSuffix {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: 0;
  }
}

.prefix,
.suffix {
  line-height: $inputHeight - 2 * $inputPadding;
  min-width: 3rem;
  text-align: center;
  display: flex;
  align-items: center;
}

.prefix {
  order: 1;
  border-top-left-radius: $inputBorderRadius;
  border-bottom-left-radius: $inputBorderRadius;
  border-right: 0;
  padding-right: 0;
}

.suffix {
  order: 3;
  border-top-right-radius: $inputBorderRadius;
  border-bottom-right-radius: $inputBorderRadius;
  border-left: 0;
}

.prefix:active,
.suffix:active {
  background-color: $activeBackgroundColor;
}

.disabled {
  cursor: default;

  .input,
  .prefix,
  .suffix {
    color: $fadedTextColor;
    border-color: $separatorColor;
  }

  .prefix svg,
  .suffix svg {
    fill: $fadedTextColor;
  }
}

.hasError {
  .input,
  .prefix,
  .suffix {
    border-color: color.mix(#f00, $inputBorderColor, $weight: 40%) !important;
  }
}

.borderless {
  .input,
  .prefix,
  .suffix {
    border: none;
  }
}

// stylelint-disable-next-line no-duplicate-selectors
.input:focus {
  + .prefix,
  + .suffix,
  + .prefix + .suffix {
    border-color: color.mix($primaryColor, $inputBorderColor, $weight: 33%);
  }
}

.error {
  margin-top: 1.5rem;
}
