module.exports = {
  // Node modules.
  atom: ['jotai', 'atom'],
  cx: ['clsx', 'default'],
  React: 'react',
  useAtom: ['jotai', 'useAtom'],
  useAtomValue: ['jotai', 'useAtomValue'],
  useCallback: ['react', 'useCallback'],
  useContext: ['react', 'useContext'],
  useDeferredValue: ['react', 'useDeferredValue'],
  useDebugValue: ['react', 'useDebugValue'],
  useEffect: ['react', 'useEffect'],
  useFormState: ['react-hook-form', 'useFormState'],
  useId: ['react', 'useId'],
  useImperativeHandle: ['react', 'useImperativeHandle'],
  useLayoutEffect: ['react', 'useLayoutEffect'],
  useMemo: ['react', 'useMemo'],
  useReducer: ['react', 'useReducer'],
  useRef: ['react', 'useRef'],
  useSetAtom: ['jotai', 'useSetAtom'],
  useState: ['react', 'useState'],
  useTransition: ['react', 'useTransition'],
  // Core components.
  // Components using CSS Modules must be imported manually.
  // Otherwise, the first component to import the component will have styles appear before base styles.
  Button: ['./framework/web/components/common/Button', 'default'],
  Img: ['./framework/web/components/common/Img', 'default'],
  Input: ['./framework/web/components/common/Input', 'default'],
  Link: ['./framework/web/components/common/Link', 'default'],
  Spinner: ['./framework/web/components/common/Spinner', 'default'],
  TruncatedText: ['./framework/web/components/common/TruncatedText', 'default'],
  // Lib.
  constate: ['./framework/web/utils/constate', 'default'],
  EMPTY_ARR: ['./framework/web/utils/emptyArr', 'default'],
  EMPTY_MAP: ['./framework/web/utils/emptyMap', 'default'],
  EMPTY_OBJ: ['./framework/web/utils/emptyObj', 'default'],
  EMPTY_SET: ['./framework/web/utils/emptySet', 'default'],
  ErrorLogger: ['./framework/web/services/ErrorLogger', 'default'],
  EventLogger: ['./framework/web/services/EventLogger', 'default'],
  hideSlideUp: ['./framework/web/stores/SlideUpStore', 'hideSlideUp'],
  markStable: ['./framework/web/utils/markStable', 'default'],
  NOOP: ['./framework/web/utils/noop', 'default'],
  reactLazy: ['./framework/web/utils/reactLazy', 'default'],
  showModal: ['./framework/web/stores/ModalStore', 'showModal'],
  showConfirm: ['./framework/web/stores/ModalStore', 'showConfirm'],
  showSlideUp: ['./framework/web/stores/SlideUpStore', 'showSlideUp'],
  showToast: ['./framework/web/stores/ToastsStore', 'showToast'],
  TestIds: ['./framework/shared/consts/testIds', 'default'],
  useAllEntities: ['./framework/web/stores/entities/useAllEntities', 'default'],
  useApi: ['./framework/web/stores/api/useApi', 'default'],
  useCatchAsync: ['./framework/web/utils/useCatchAsync', 'default'],
  useConst: ['./framework/web/utils/useConst', 'default'],
  useDeferredApi: ['./framework/web/stores/api/useDeferredApi', 'default'],
  useDeepMemoObj: ['./framework/web/utils/useDeepMemoObj', 'default'],
  useLatestCallback: ['./framework/web/utils/useLatestCallback', 'default'],
  useEntity: ['./framework/web/stores/entities/useEntity', 'default'],
  useEntitiesArr: ['./framework/web/stores/entities/useEntitiesArr', 'default'],
  useForm: ['./framework/web/utils/useForm', 'default'],
  useGlobalMemo: ['./framework/web/services/useGlobalMemo', 'default'],
  useLatest: ['./framework/web/utils/useLatest', 'default'],
  useLog: ['./framework/web/utils/useLog', 'default'],
  useLogChanged: ['./framework/web/utils/useLogChanged', 'default'],
  useLogLifecycle: ['./framework/web/utils/useLogLifecycle', 'default'],
  usePushPath: ['./framework/web/stores/history/usePushPath', 'default'],
  useRelation: ['./framework/web/stores/entities/useRelation', 'default'],
  useReplacePath: ['./framework/web/stores/history/useReplacePath', 'default'],
  useRequiredRelation: ['./framework/web/stores/entities/useRequiredRelation', 'default'],
  useRequiredEntity: ['./framework/web/stores/entities/useRequiredEntity', 'default'],
  useSse: ['./framework/web/stores/sse/useSse', 'default'],
  useSseArr: ['./framework/web/stores/sse/useSseArr', 'default'],
  useStateStable: ['./framework/web/utils/useStateStable', 'default'],
  wrapPromise: ['./framework/web/utils/wrapPromise', 'default'],
  // Constate stores.
  useApiStore: ['./framework/web/stores/api/ApiStore', 'useApiStore'],
  useAuthStore: ['./framework/web/stores/AuthStore', 'useAuthStore'],
  useEntitiesStore: ['./framework/web/stores/entities/EntitiesStore', 'useEntitiesStore'],
  useEntitiesIndexStore: ['./framework/web/stores/entities/EntitiesIndexStore', 'useEntitiesIndexStore'],
  useHistoryStore: ['./framework/web/stores/history/HistoryStore', 'useHistoryStore'],
  useLightboxStore: ['./framework/web/stores/LightboxStore', 'useLightboxStore'],
  useRelationsStore: ['./framework/web/stores/RelationsStore', 'useRelationsStore'],
  useRouteStore: ['./framework/web/stores/RouteStore', 'useRouteStore'],
  useSseStore: ['./framework/web/stores/sse/SseStore', 'useSseStore'],
  useUIFrameStore: ['./framework/web/stores/UIFrameStore', 'useUIFrameStore'],
  // Constate split.
  useAuthState: ['./framework/web/stores/AuthStore', 'useAuthState'],
  useCurrentUserId: ['./framework/web/stores/AuthStore', 'useCurrentUserId'],
  useMutateApiCache: ['./framework/web/stores/api/ApiStore', 'useMutateApiCache'],
  useMutateEntity: ['./framework/web/stores/entities/EntitiesStore', 'useMutateEntity'],
  useNavState: ['./framework/web/stores/history/HistoryStore', 'useNavState'],
  useReloadPage: ['./framework/web/stores/UIFrameStore', 'useReloadPage'],
  useRouteMatches: ['./framework/web/stores/RouteStore', 'useRouteMatches'],
  useRouteQuery: ['./framework/web/stores/RouteStore', 'useRouteQuery'],
};
