import type _dayjs from 'dayjs';
import type _express from 'express';
import type _fetch from 'node-fetch';
import type { Model as _Model } from 'objection';
import type { default as _EMPTY_ARR } from '../../../server/lib/emptyArr';
import type { default as _EMPTY_OBJ } from '../../../server/lib/emptyObj';
import type { default as _Entity } from '../../../server/models/core/Entity';
import type { default as _ErrorLogger } from '../../../server/lib/errorLogger/ErrorLogger';
import type { default as _HandledError } from '../../../server/lib/HandledError';
import type { default as _NOOP } from '../../../server/lib/noop';
import type { default as _pause } from '../../../shared/lib/pause';
import type { default as _promiseObj } from '../../../server/lib/promiseObj';
import type { raw as _raw } from '../../../server/services/knex';
import type { default as _SchemaConstants } from '../../../server/consts/schema';
import type { default as _TS } from '../../../shared/lib/tsHelpers';
import type { default as _BaseUser } from '../../../server/models/BaseUser';
import type { default as _Notif } from '../../../server/models/Notif';
import type { default as _Report } from '../../../server/models/Report';
import type { default as _UserMeta } from '../../../server/models/UserMeta';
import type { default as _defaultModels } from '../../../server/models/defaultModels';

declare global {
  const dayjs: typeof _dayjs;
  const express: typeof _express;
  const fetch: typeof _fetch;
  const Model: typeof _Model;
  const EMPTY_ARR: typeof _EMPTY_ARR;
  const EMPTY_OBJ: typeof _EMPTY_OBJ;
  const Entity: typeof _Entity;
  const ErrorLogger: typeof _ErrorLogger;
  const HandledError: typeof _HandledError;
  const NOOP: typeof _NOOP;
  const pause: typeof _pause;
  const promiseObj: typeof _promiseObj;
  const raw: typeof _raw;
  const SchemaConstants: typeof _SchemaConstants;
  const TS: typeof _TS;
  const BaseUser: typeof _BaseUser;
  const Notif: typeof _Notif;
  const Report: typeof _Report;
  const UserMeta: typeof _UserMeta;
  const defaultModels: typeof _defaultModels;
}
